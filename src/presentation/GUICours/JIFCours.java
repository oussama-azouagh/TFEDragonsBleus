/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation.GUICours;

import dao.DAOCours;
import factory.Factory;
import model.TableModelCours;
import java.beans.PropertyVetoException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import presentation.GUICours.JDAddCours;

/**
 *
 * @author MediaMonster
 */
public class JIFCours extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIFCours
     */
    public JIFCours() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableCours = new JTable(myModel);
        LabelCours = new javax.swing.JLabel();
        BoutonMenu = new javax.swing.JButton();
        BoutonAjout = new javax.swing.JButton();
        BoutonSuppression = new javax.swing.JButton();
        BoutonModification = new javax.swing.JButton();

        jScrollPane1.setViewportView(TableCours);

        LabelCours.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        LabelCours.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelCours.setText("COURS");

        BoutonMenu.setText("Menu");
        BoutonMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonMenuActionPerformed(evt);
            }
        });

        BoutonAjout.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        BoutonAjout.setForeground(new java.awt.Color(0, 255, 0));
        BoutonAjout.setText("+");
        BoutonAjout.setToolTipText("");
        BoutonAjout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonAjoutActionPerformed(evt);
            }
        });

        BoutonSuppression.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        BoutonSuppression.setForeground(new java.awt.Color(255, 0, 0));
        BoutonSuppression.setText("-");
        BoutonSuppression.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonSuppressionActionPerformed(evt);
            }
        });

        BoutonModification.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        BoutonModification.setForeground(new java.awt.Color(255, 102, 0));
        BoutonModification.setText("modifier");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(LabelCours, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BoutonMenu)
                        .addGap(115, 115, 115)
                        .addComponent(BoutonAjout)
                        .addGap(18, 18, 18)
                        .addComponent(BoutonSuppression)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BoutonModification)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(LabelCours)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BoutonMenu)
                    .addComponent(BoutonAjout)
                    .addComponent(BoutonSuppression)
                    .addComponent(BoutonModification))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BoutonMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonMenuActionPerformed
        //Menu
        this.dispose();
    }//GEN-LAST:event_BoutonMenuActionPerformed

    private void BoutonSuppressionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonSuppressionActionPerformed
        // TODO add your handling code here:
        System.out.println(TableCours.getSelectedRow());
                
         //supprimer
         if (TableCours.getSelectedRow() == -1)
            JOptionPane.showMessageDialog(null,"Sélectionnez d'abord une ligne svp !","Avertissement",JOptionPane.ERROR_MESSAGE);
        else {
             System.out.println(TableCours.getSelectedRow());
            int rep = JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment supprimer " +
                    myModel.getValueAt(TableCours.convertRowIndexToModel(TableCours.getSelectedRow()),0) + " ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (rep == JOptionPane.YES_OPTION)
                daoCours.deleteCours((int)myModel.getValueAt(TableCours.convertRowIndexToModel(TableCours.getSelectedRow()),0));
            // après la suppression : rafraîchir les données en relisant la BD
            refreshModel();
            myModel.getMyList();
        }
    }//GEN-LAST:event_BoutonSuppressionActionPerformed

    private void BoutonAjoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonAjoutActionPerformed
        // TODO add your handling code here:
        
        // récupère la JFrame parente
        JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
        new JDAddCours(parent, "INSERTION D'UN COUR");
        
        // après l'insertion : rafraîchir les données en relisant la BD
        this.refreshModel();
        myModel.fireTableDataChanged();
        
        
        ArrayList tmp = myModel.getMyList();
         myModel.setMyList(tmp);
         myModel.fireTableDataChanged();
            
       
        refreshModel();
    }//GEN-LAST:event_BoutonAjoutActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BoutonAjout;
    private javax.swing.JButton BoutonMenu;
    private javax.swing.JButton BoutonModification;
    private javax.swing.JButton BoutonSuppression;
    private javax.swing.JLabel LabelCours;
    private javax.swing.JTable TableCours;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
private DAOCours daoCours = Factory.getDAOCours();
private TableModelCours myModel = new model.TableModelCours(daoCours.selectCours());




private void refreshModel(){
    myModel.setMyList(daoCours.selectCours());  
    myModel.getMyList().forEach(model->System.out.println(model));
    }

}
