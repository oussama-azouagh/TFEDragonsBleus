/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation.GUICategorie;


import dao.DAOCategorie;
import daoMySQL.DAOCategorieMySQL;
import factory.Factory;
import java.beans.PropertyVetoException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import model.TableModelCategorie;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import presentation.GUICategorie.JDAddCategorie;
import presentation.GUICategorie.JDUpdateCategorie;
import transfertObject.Categorie;

/**
 *
 * @author MediaMonster
 */
public class JIFCategorie extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIFMoniteur
     */
    public JIFCategorie() {
        initComponents();
        refreshModel();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelCategorie = new javax.swing.JLabel();
        boutonMenu = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCategorie = new JTable(myModel);
        boutonAjouterCategorie = new javax.swing.JButton();
        boutonSuppressionCategorie = new javax.swing.JButton();
        boutonModificationCategorie = new javax.swing.JButton();

        labelCategorie.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelCategorie.setText("Catégories");
        labelCategorie.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        boutonMenu.setText("Menu");
        boutonMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonMenuActionPerformed(evt);
            }
        });

        tableCategorie.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tableCategorie.setMaximumSize(new java.awt.Dimension(500, 500));
        tableCategorie.setMinimumSize(new java.awt.Dimension(500, 500));
        tableCategorie.setPreferredSize(new java.awt.Dimension(500, 500));
        tableCategorie.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableCategorie.setShowGrid(true);
        jScrollPane1.setViewportView(tableCategorie);

        boutonAjouterCategorie.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        boutonAjouterCategorie.setForeground(new java.awt.Color(0, 255, 0));
        boutonAjouterCategorie.setText("+");
        boutonAjouterCategorie.setToolTipText("");
        boutonAjouterCategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonAjouterCategorieActionPerformed(evt);
            }
        });

        boutonSuppressionCategorie.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        boutonSuppressionCategorie.setForeground(new java.awt.Color(255, 0, 0));
        boutonSuppressionCategorie.setText("-");
        boutonSuppressionCategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonSuppressionCategorieActionPerformed(evt);
            }
        });

        boutonModificationCategorie.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        boutonModificationCategorie.setForeground(new java.awt.Color(255, 102, 0));
        boutonModificationCategorie.setText("modifier");
        boutonModificationCategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonModificationCategorieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addComponent(labelCategorie)
                .addContainerGap(268, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(boutonMenu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(boutonAjouterCategorie)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boutonSuppressionCategorie)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boutonModificationCategorie)
                .addGap(14, 14, 14))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelCategorie)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boutonMenu)
                    .addComponent(boutonAjouterCategorie)
                    .addComponent(boutonSuppressionCategorie)
                    .addComponent(boutonModificationCategorie))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boutonMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonMenuActionPerformed
        // bouton precedent
        this.dispose();
       
       
    }//GEN-LAST:event_boutonMenuActionPerformed

    private void boutonSuppressionCategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonSuppressionCategorieActionPerformed
        // TODO add your handling code here:
        
         //supprimer
         if (tableCategorie.getSelectedRow() == -1)
            JOptionPane.showMessageDialog(null,"Sélectionnez d'abord une ligne svp !","Avertissement",JOptionPane.ERROR_MESSAGE);
        else {
            int rep = JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment supprimer " +
                    myModel.getValueAt(tableCategorie.convertRowIndexToModel(tableCategorie.getSelectedRow()),0) + " ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (rep == JOptionPane.YES_OPTION)
                daoCate.deleteCategorie((int)myModel.getValueAt(tableCategorie.convertRowIndexToModel(tableCategorie.getSelectedRow()),0));
            // après la suppression : rafraîchir les données en relisant la BD
            refreshModel();
            myModel.getMyList();
        }
    }//GEN-LAST:event_boutonSuppressionCategorieActionPerformed

    private void boutonAjouterCategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonAjouterCategorieActionPerformed
        // TODO add your handling code here:
        
        // récupère la JFrame parente
        JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
        new JDAddCategorie(parent, "INSERTION D'UNE CATEGORIE");
        
        // après l'insertion : rafraîchir les données en relisant la BD
        this.refreshModel();
        myModel.fireTableDataChanged();
        
        
        ArrayList tmp = myModel.getMyList();
         myModel.setMyList(tmp);
         myModel.fireTableDataChanged();
            
       
        System.out.println(" ajout test");
        refreshModel();
    }//GEN-LAST:event_boutonAjouterCategorieActionPerformed

    private void boutonModificationCategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonModificationCategorieActionPerformed
        // TODO add your handling code here:
        
        if (tableCategorie.getSelectedRow() == -1)
            JOptionPane.showMessageDialog(this,"Sélectionnez d'abord une ligne svp !","Avertissement",JOptionPane.ERROR_MESSAGE);
        else {
            // renvoie l'objet Categorie à passer en paramètre
            Categorie cate =myModel.getMyList(tableCategorie.convertRowIndexToModel(tableCategorie.getSelectedRow()));
                      
            // récupère la JFrame parente
            JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
            new JDUpdateCategorie(parent, "MODIFICATION D'UNE CATEGORIE", cate);
            
            // après la modification : rafraîchir les données en relisant la BD
            refreshModel();
            System.out.println(" modif test");
        }
    }//GEN-LAST:event_boutonModificationCategorieActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boutonAjouterCategorie;
    private javax.swing.JButton boutonMenu;
    private javax.swing.JButton boutonModificationCategorie;
    private javax.swing.JButton boutonSuppressionCategorie;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCategorie;
    private javax.swing.JTable tableCategorie;
    // End of variables declaration//GEN-END:variables
 private DAOCategorie daoCate = Factory.getDAOCategorie();
private TableModelCategorie myModel = new model.TableModelCategorie(daoCate.selectCategorie());

private void refreshModel(){
    myModel.setMyList(daoCate.selectCategorie());  
    //myModel.getMyList().forEach(model->System.out.println(model));
    }

}
