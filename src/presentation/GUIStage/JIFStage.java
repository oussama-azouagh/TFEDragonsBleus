/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation.GUIStage;

import dao.*;
import factory.*;
import transfertObject.*;
import model.*;
import javax.swing.*;
import java.util.*;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author MediaMonster
 */
public class JIFStage extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIFStage
     */
    public JIFStage() {
        initComponents();
        refreshModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableStage = new JTable(myModel);
        BoutonMenu = new javax.swing.JButton();
        LabelStage = new javax.swing.JLabel();
        BoutonAjoutStage = new javax.swing.JButton();
        BoutonSuppressionStage = new javax.swing.JButton();
        BoutonModificationStage = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(700, 500));

        TableStage.setModel(new model.TableModelStage(daoStage.selectStage()));
        TableStage.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TableStage.setShowGrid(true);

        /* initialisation des largeurs de colonnes */
        javax.swing.table.TableColumn column = null;
        column = TableStage.getColumnModel().getColumn(0);
        column.setPreferredWidth(50);
        column = TableStage.getColumnModel().getColumn(1);
        column.setPreferredWidth(150);
        column = TableStage.getColumnModel().getColumn(2);
        column.setPreferredWidth(150);
        column = TableStage.getColumnModel().getColumn(3);
        column.setPreferredWidth(150);
        column = TableStage.getColumnModel().getColumn(4);
        column.setPreferredWidth(150);
        column = TableStage.getColumnModel().getColumn(5);
        column.setPreferredWidth(150);
        column = TableStage.getColumnModel().getColumn(6);
        column.setPreferredWidth(150);
        column = TableStage.getColumnModel().getColumn(7);
        column.setPreferredWidth(150);

        /* jTableApp.setRowSorter(new TableRowSorter(myModel)); */

        jScrollPane1.setViewportView(TableStage);

        BoutonMenu.setText("Menu");
        BoutonMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonMenuActionPerformed(evt);
            }
        });

        LabelStage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelStage.setText("Stages");
        LabelStage.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        BoutonAjoutStage.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        BoutonAjoutStage.setForeground(new java.awt.Color(0, 255, 0));
        BoutonAjoutStage.setText("+");
        BoutonAjoutStage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonAjoutStageActionPerformed(evt);
            }
        });

        BoutonSuppressionStage.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        BoutonSuppressionStage.setForeground(new java.awt.Color(255, 0, 0));
        BoutonSuppressionStage.setText("-");
        BoutonSuppressionStage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonSuppressionStageActionPerformed(evt);
            }
        });

        BoutonModificationStage.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        BoutonModificationStage.setForeground(new java.awt.Color(255, 102, 0));
        BoutonModificationStage.setText("Modifier");
        BoutonModificationStage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoutonModificationStageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(LabelStage, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BoutonMenu)
                        .addGap(103, 103, 103)
                        .addComponent(BoutonAjoutStage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BoutonSuppressionStage)
                        .addGap(18, 18, 18)
                        .addComponent(BoutonModificationStage))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 84, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelStage)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BoutonMenu)
                    .addComponent(BoutonModificationStage)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BoutonAjoutStage)
                        .addComponent(BoutonSuppressionStage)))
                .addContainerGap(111, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BoutonMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonMenuActionPerformed
        // bouton Menu
        this.dispose();
      
    }//GEN-LAST:event_BoutonMenuActionPerformed

    private void BoutonAjoutStageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonAjoutStageActionPerformed
        // TODO add your handling code here:
        // récupère la JFrame parente
        JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
        new JDAddStage(parent, "INSERTION D'UN STAGE");
        
        // après l'insertion : rafraîchir les données en relisant la BD
        this.refreshModel();
        myModel.fireTableDataChanged();
        
        
        ArrayList tmp = myModel.getMyList();
         myModel.setMyList(tmp);
         myModel.fireTableDataChanged();
            
       
        System.out.println(" ajout test");
        refreshModel();
    }//GEN-LAST:event_BoutonAjoutStageActionPerformed

    private void BoutonSuppressionStageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonSuppressionStageActionPerformed
        // TODO add your handling code here:
        
        //supprimer
         if (TableStage.getSelectedRow() == -1)
            JOptionPane.showMessageDialog(null,"Sélectionnez d'abord une ligne svp !","Avertissement",JOptionPane.ERROR_MESSAGE);
        else {
            int rep = JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment supprimer " +
                    myModel.getValueAt(TableStage.convertRowIndexToModel(TableStage.getSelectedRow()),0) + " ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (rep == JOptionPane.YES_OPTION)
                daoStage.deleteStage((int)myModel.getValueAt(TableStage.convertRowIndexToModel(TableStage.getSelectedRow()),0));
            // après la suppression : rafraîchir les données en relisant la BD
            
            refreshModel();
            this.refreshModel();
        }
    }//GEN-LAST:event_BoutonSuppressionStageActionPerformed

    private void BoutonModificationStageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoutonModificationStageActionPerformed
        // TODO add your handling code here:
    /**    
        Stage staModif;
        
        if (jTable1.getSelectedRow() == -1)
            JOptionPane.showMessageDialog(this,"Sélectionnez d'abord un Stage svp !","Avertissement",JOptionPane.ERROR_MESSAGE);
        else
        {
            String nouvNomStage = JOptionPane.showInputDialog(this,"Entrez le nouveau nom du Stage",(String)jTable1.getValueAt(jTable1.getSelectedRow(), 1));
            if (nouvNomStage != null)
            {
                nouvNomStage = nouvNomStage.substring(0, 1).toUpperCase() + nouvNomStage.substring(1);//1ère lettre en majuscule
                staModif = myModel.getMyList(jTable1.getSelectedRow());
                staModif.setNom(nouvNomStage);
                boolean ok = daoStage.updateStage(staModif);
                if (!ok)
                    JOptionPane.showMessageDialog(this,"Modification impossible !","Avertissement",JOptionPane.ERROR_MESSAGE);
            }
            else
                JOptionPane.showMessageDialog(this,"Opération annulée !","Avertissement",JOptionPane.ERROR_MESSAGE);
            // après : rafraîchir la liste
            refreshModel();
        }
        * 
        * 
        **/
    if (TableStage.getSelectedRow() == -1)
            JOptionPane.showMessageDialog(this,"Sélectionnez d'abord une ligne svp !","Avertissement",JOptionPane.ERROR_MESSAGE);
        else {
            // renvoie l'objet Appareil à passer en paramètre
            Stage sta =myModel.getMyList(TableStage.convertRowIndexToModel(TableStage.getSelectedRow()));
                      
            // récupère la JFrame parente
            JFrame parent = (JFrame)(this.getDesktopPane().getTopLevelAncestor());
            new JDUpdateStage(parent, "MODIFICATION DU STAGE", sta);
            
            // après la modification : rafraîchir les données en relisant la BD
            refreshModel();
            System.out.println(" modif test");
        }
    }//GEN-LAST:event_BoutonModificationStageActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BoutonAjoutStage;
    private javax.swing.JButton BoutonMenu;
    private javax.swing.JButton BoutonModificationStage;
    private javax.swing.JButton BoutonSuppressionStage;
    private javax.swing.JLabel LabelStage;
    private javax.swing.JTable TableStage;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
   private void refreshModel(){
    myModel.setMyList(daoStage.selectStage());
    myModel.getMyList().forEach(model->System.out.println(model));
    }
    
    private DAOStage daoStage = Factory.getDAOStage();
   private TableModelStage myModel = new model.TableModelStage(daoStage.selectStage());
    
   //corriger erreur 
    /**
     * correct add delete alter
     */
   
}
